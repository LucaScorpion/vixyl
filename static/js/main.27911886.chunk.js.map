{"version":3,"sources":["util/Point.ts","vinyl/CanvasImage.ts","components/Icon.tsx","util/createDataUrl.ts","util/b64Encode.js","components/DataPreview.tsx","util/Pixel.ts","util/draw.ts","vinyl/encoders/encoders.ts","vinyl/encoders/SpiralBase.ts","vinyl/encoders/RainbowSpiral.ts","vinyl/encoders/GraySpiral.ts","ReadVinylPage.tsx","components/GithubCorner.tsx","components/ExternalLink.tsx","images/tweet.png","images/tdfw_new.png","AboutPage.tsx","vinyl/form/BooleanFormOption.tsx","vinyl/form/ColorFormOption.tsx","vinyl/form/FormOption.tsx","CreateVinylPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["isSamePoint","a","b","x","y","CanvasImage","context","imageData","this","getImageData","canvas","width","height","xOrPos","xVal","yVal","p","offset","data","slice","red","green","blue","alpha","pos","Icon","icon","className","createDataUrl","type","arrayBuffer","chunk","base64","encodings","bytes","Uint8Array","byteLength","byteRemainder","mainLength","i","base64ArrayBuffer","DataPreview","dataUrl","indexOf","controls","src","style","alt","download","href","grayPixel","value","encodeInt24Pixel","decodeInt24Pixel","pixel","drawPixel","fillStyle","fillRect","drawCircle","radius","fill","beginPath","arc","Math","PI","Encoding","SpiralBase","key","text","defaultValue","r","g","file","options","pixels","length","split","map","char","charCodeAt","getPixels","spiral","createSpiral","size","setCanvasProps","clearRect","center","round","bgColor","form","min","points","addQr","qrImg","Image","Promise","res","addEventListener","drawImage","point","startingPoint","image","getPixel","readVinylTrack","fileTypeLength","String","fromCharCode","dataLength","getBytes","previousPoint","dT","t","self","isPointValid","nextPoint","isNeighbor","valid","floor","cos","sin","absX","abs","absY","reverse","vinyl","trackStart","prevPos","push","nextPos","findNextPixel","previous","current","dX","dY","isInBounds","RainbowSpiral","result","GraySpiral","forEach","byte","encoders","GRAY_SPIRAL","RAINBOW_SPIRAL","getEncoder","encoding","Encoder","Error","getDecoder","vix","yl","ReadVinylPage","canvasRef","useRef","useState","setImageData","setImage","setVinyl","fileData","setFileData","loading","setLoading","useEffect","loadImg","getContext","selectFile","useCallback","e","currentTarget","files","item","undefined","reader","FileReader","readAsDataURL","readVinyl","decoder","decode","accept","onChange","ref","maxWidth","maxHeight","marginBottom","onClick","disabled","GithubCorner","target","rel","xmlns","viewBox","d","ExternalLink","children","AboutPage","display","justifyContent","marginLeft","tweet","marginRight","tdfw_new","to","BooleanFormOption","id","checked","htmlFor","ColorFormOption","color","rgb","FormOption","props","CreateVinylPage","fileInfo","setFileInfo","setEncoding","encoder","setEncoder","encoderOptions","setEncoderOptions","canvasProps","canvasPropsResolve","setCanvasPropsResolve","imgDataUrl","setImgDataUrl","enc","opts","getEncodeForm","opt","readAsArrayBuffer","createVinyl","encode","canvasPropsPromise","resolve","toDataURL","parseInt","option","val","prevState","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27911886.chunk.js","sourcesContent":["export default interface Point {\n  x: number;\n  y: number;\n}\n\nexport function isSamePoint(a: Point, b: Point): boolean {\n  return a.x === b.x && a.y === b.y;\n}\n\nexport function isPoint(p: any): p is Point {\n  if (typeof p !== 'object' || !p) {\n    return false;\n  }\n\n  return 'x' in p && 'y' in p && typeof p.x === 'number' && typeof p.y === 'number';\n}\n","import Point, { isPoint } from '../util/Point';\nimport Pixel from '../util/Pixel';\n\nexport default class CanvasImage {\n  private readonly imageData: ImageData;\n\n  constructor(context: CanvasRenderingContext2D) {\n    this.imageData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n  }\n\n  public get width() {\n    return this.imageData.width;\n  }\n\n  public get height() {\n    return this.imageData.height;\n  }\n\n  public getPixel(pos: Point): Pixel;\n  public getPixel(x: number, y: number): Pixel;\n  public getPixel(xOrPos: Point | number, y?: number): Pixel {\n    let xVal: number;\n    let yVal: number;\n    if (isPoint(xOrPos)) {\n      xVal = xOrPos.x;\n      yVal = xOrPos.y;\n    } else {\n      xVal = xOrPos;\n      yVal = y || 0;\n    }\n\n    const offset = (xVal + yVal * this.imageData.width) * 4;\n    const data = this.imageData.data.slice(offset, offset + 4);\n    return ({\n      red: data[0],\n      green: data[1],\n      blue: data[2],\n      alpha: data[3],\n    });\n  }\n\n  public isInBounds(pos: Point): boolean {\n    return pos.x >= 0 && pos.y >= 0 && pos.x < this.imageData.width && pos.y < this.imageData.height;\n  }\n}\n","import React from 'react';\n\nexport interface Props {\n  icon: string;\n  className?: string;\n}\n\nconst Icon: React.FC<Props> = ({ icon, className }) => (\n  <i className={`fas fa-${icon} ${className || ''}`} />\n)\n\nexport default Icon;\n\n","import { base64ArrayBuffer } from './b64Encode';\n\nexport default function createDataUrl(type: string, data: Uint8Array): string {\n  return `data:${type};base64,${base64ArrayBuffer(data)}`;\n}\n","// TODO: Maybe not copy/paste code straight from a gist.\n// https://gist.github.com/jonleighton/958841\n\nexport function base64ArrayBuffer(arrayBuffer) {\n    var base64    = ''\n    var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\n    var bytes         = new Uint8Array(arrayBuffer)\n    var byteLength    = bytes.byteLength\n    var byteRemainder = byteLength % 3\n    var mainLength    = byteLength - byteRemainder\n\n    var a, b, c, d\n    var chunk\n\n    // Main loop deals with bytes in chunks of 3\n    for (var i = 0; i < mainLength; i = i + 3) {\n        // Combine the three bytes into a single integer\n        chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]\n\n        // Use bitmasks to extract 6-bit segments from the triplet\n        a = (chunk & 16515072) >> 18 // 16515072 = (2^6 - 1) << 18\n        b = (chunk & 258048)   >> 12 // 258048   = (2^6 - 1) << 12\n        c = (chunk & 4032)     >>  6 // 4032     = (2^6 - 1) << 6\n        d = chunk & 63               // 63       = 2^6 - 1\n\n        // Convert the raw binary segments to the appropriate ASCII encoding\n        base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]\n    }\n\n    // Deal with the remaining bytes and padding\n    // eslint-disable-next-line eqeqeq\n    if (byteRemainder == 1) {\n        chunk = bytes[mainLength]\n\n        a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2\n\n        // Set the 4 least significant bits to zero\n        b = (chunk & 3)   << 4 // 3   = 2^2 - 1\n\n        base64 += encodings[a] + encodings[b] + '=='\n    // eslint-disable-next-line eqeqeq\n    } else if (byteRemainder == 2) {\n        chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]\n\n        a = (chunk & 64512) >> 10 // 64512 = (2^6 - 1) << 10\n        b = (chunk & 1008)  >>  4 // 1008  = (2^6 - 1) << 4\n\n        // Set the 2 least significant bits to zero\n        c = (chunk & 15)    <<  2 // 15    = 2^4 - 1\n\n        base64 += encodings[a] + encodings[b] + encodings[c] + '='\n    }\n\n    return base64\n}\n","import React from 'react';\nimport createDataUrl from '../util/createDataUrl';\nimport Icon from './Icon';\n\nexport interface Props {\n  type: string;\n  data: Uint8Array;\n}\n\nconst DataPreview: React.FC<Props> = ({ type, data }) => {\n  const dataUrl = createDataUrl(type, data);\n\n  if (type.indexOf('audio/') === 0) {\n    return (\n      <audio controls src={dataUrl} style={{ width: '100%' }} />\n    );\n  }\n\n  if (type.indexOf('image/') === 0) {\n    return (\n      <img src={dataUrl} alt='' />\n    );\n  }\n\n  return (\n    <a download={'file'} href={dataUrl}>\n      <button className='big'>\n        Download <Icon icon='download' />\n      </button>\n    </a>\n  );\n};\n\nexport default DataPreview;\n","export default interface Pixel {\n  red: number;\n  green: number;\n  blue: number;\n  alpha: number;\n}\n\nexport function grayPixel(value: number): Pixel {\n  return ({\n    red: value,\n    green: value,\n    blue: value,\n    alpha: 255,\n  });\n}\n\nexport function encodeInt24Pixel(value: number): Pixel {\n  return ({\n    red: value & 0xFF,\n    green: (value >> 8) & 0xFF,\n    blue: (value >> 16) & 0xFF,\n    alpha: 255,\n  });\n}\n\nexport function decodeInt24Pixel(pixel: Pixel): number {\n  return pixel.red + (pixel.green << 8) + (pixel.blue << 16);\n}\n\nexport function isDataPixel(data: Pixel): boolean {\n  return data.alpha === 255;\n}\n\nexport function encodeStringGrayPixels(text: string): Pixel[] {\n  return text.split('').map(char => grayPixel(char.charCodeAt(0)));\n}\n","import Pixel from './Pixel';\n\nexport function drawPixel(context: CanvasRenderingContext2D, x: number, y: number, pixel: Pixel): void {\n  context.fillStyle = `rgba(${pixel.red}, ${pixel.green}, ${pixel.blue}, ${pixel.alpha})`;\n  context.fillRect(x, y, 1, 1);\n}\n\nexport function drawCircle(context: CanvasRenderingContext2D, x: number, y: number, radius: number, fill: string) {\n  context.fillStyle = fill;\n  context.beginPath();\n  context.arc(x, y, radius, 0, 2 * Math.PI);\n  context.fill();\n}\n","import RainbowSpiral from './RainbowSpiral';\nimport GraySpiral from './GraySpiral';\nimport EncoderDecoder from './EncoderDecoder';\nimport CanvasImage from '../CanvasImage';\n\nexport enum Encoding {\n  GRAY_SPIRAL,\n  RAINBOW_SPIRAL,\n}\n\nconst encoders = {\n  [Encoding.GRAY_SPIRAL]: GraySpiral,\n  [Encoding.RAINBOW_SPIRAL]: RainbowSpiral,\n};\n\nexport function getEncoder(encoding: Encoding): EncoderDecoder<unknown> {\n  const Encoder = encoders[encoding];\n  if (!Encoder) {\n    throw new Error('Unknown encoding');\n  }\n  return new Encoder();\n}\n\nexport function getDecoder(vinyl: CanvasImage): EncoderDecoder<unknown> {\n  const vix = vinyl.getPixel(0, 0);\n  const yl = vinyl.getPixel(1, 0);\n\n  // Check if the top-left RGB values decode to \"Vixyl\".\n  if (vix.red !== 86 || vix.green !== 105 || vix.blue !== 120 || yl.red !== 121 || yl.green !== 108) {\n    throw new Error('Invalid header');\n  }\n\n  return getEncoder(yl.blue);\n}\n","import EncoderDecoder, { EncodeFormOption, EncodeOptions } from './EncoderDecoder';\nimport Point, { isSamePoint } from '../../util/Point';\nimport Pixel, { decodeInt24Pixel, encodeInt24Pixel, encodeStringGrayPixels, isDataPixel } from '../../util/Pixel';\nimport { drawCircle, drawPixel } from '../../util/draw';\nimport { FileInfo } from '../FileInfo';\nimport CanvasImage from '../CanvasImage';\nimport { RGBColor } from 'react-color';\n\nexport interface Options {\n  addQr: boolean;\n  bgColor: RGBColor;\n}\n\nexport interface Spiral {\n  points: Point[];\n  radius: number;\n}\n\nexport default abstract class SpiralBase implements EncoderDecoder<Options> {\n  protected abstract getPixels(data: Uint8Array): Pixel[];\n\n  protected abstract getBytes(pixels: Pixel[]): Uint8Array;\n\n  public getEncodeForm(): EncodeFormOption[] {\n    return [\n      {\n        key: 'addQr',\n        type: 'boolean',\n        text: 'Add QR code',\n        defaultValue: true,\n      },\n      {\n        key: 'bgColor',\n        type: 'color',\n        text: 'Background color',\n        defaultValue: {\n          r: 0,\n          g: 0,\n          b: 0,\n        },\n      },\n    ];\n  }\n\n  public async encode(file: FileInfo, options: EncodeOptions<Options>): Promise<void> {\n    const pixels = [\n      encodeInt24Pixel(file.type.length),   // File type length\n      ...encodeStringGrayPixels(file.type), // File type\n      encodeInt24Pixel(file.data.length),   // Data length\n      ...this.getPixels(file.data),         // Data\n    ];\n    const spiral = this.createSpiral(pixels.length);\n\n    const size = spiral.radius * 2 + 10;\n    const context = await options.setCanvasProps({\n      width: size,\n      height: size,\n    });\n\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    const center = {\n      x: Math.round(context.canvas.width / 2),\n      y: Math.round(context.canvas.height / 2),\n    };\n\n    // Draw the background circle.\n    const bgColor = options.form.bgColor;\n    const alpha = Math.min(bgColor.a == null ? 1 : bgColor.a, 0.99);\n    drawCircle(context, center.x, center.y, size / 2, `rgba(${bgColor.r}, ${bgColor.g}, ${bgColor.b}, ${alpha})`);\n\n    // Draw the inner circle and QR code.\n    drawCircle(context, center.x, center.y, spiral.points[spiral.points.length - 1].x - 5, 'white');\n    if (options.form.addQr) {\n      const qrImg = new Image();\n      await new Promise<void>(res => {\n        qrImg.addEventListener('load', () => {\n          context.drawImage(qrImg, Math.round(center.x - qrImg.width / 2), Math.round(center.y - qrImg.height / 2));\n          res();\n        });\n        qrImg.src = '/vixyl/qr.png';\n      });\n    }\n\n    // Draw all the spiral pixels.\n    for (let i = 0; i < spiral.points.length; i++) {\n      const point = spiral.points[i];\n      drawPixel(context, point.x + center.x, point.y + center.y, pixels[i]);\n    }\n\n    // Encode the starting point on y=1.\n    const startingPoint = spiral.points[0];\n    drawPixel(context, 0, 1, encodeInt24Pixel(startingPoint.x + center.x));\n    drawPixel(context, 1, 1, encodeInt24Pixel(startingPoint.y + center.y));\n  }\n\n  public decode(image: CanvasImage): FileInfo {\n    const startingPoint = {\n      x: decodeInt24Pixel(image.getPixel(0, 1)),\n      y: decodeInt24Pixel(image.getPixel(1, 1)),\n    };\n\n    const pixels = this.readVinylTrack(image, startingPoint);\n\n    // Read the file type.\n    const fileTypeLength = decodeInt24Pixel(pixels[0]);\n    let type = '';\n    for (let i = 0; i < fileTypeLength; i++) {\n      type = `${type}${String.fromCharCode(pixels[i + 1].red)}`;\n    }\n\n    // Read the data.\n    const dataLength = decodeInt24Pixel(pixels[fileTypeLength + 1]);\n    const data = this.getBytes(pixels.slice(fileTypeLength + 2)).slice(0, dataLength);\n\n    return ({\n      type,\n      data,\n    });\n  }\n\n  private createSpiral(length: number): Spiral {\n    const points: Point[] = [];\n    let radius = 0;\n\n    const a = 0.5;\n\n    let dT = 0.1;\n    let t = Math.PI * 30;\n    let previousPoint: Point | undefined;\n\n    const self = this;\n\n    function isPointValid(nextPoint: Point): boolean {\n      // If this is the first point, no checks needed.\n      if (!previousPoint) {\n        return true;\n      }\n\n      // Check if the next point is the same as the previous point.\n      if (isSamePoint(nextPoint, previousPoint)) {\n        dT *= 1.5;\n        return false;\n      }\n\n      // Check if the next point touches the previous point;\n      if (!self.isNeighbor(nextPoint, previousPoint)) {\n        dT /= 2;\n        return false;\n      }\n\n      return true;\n    }\n\n    for (let i = 0; i < length; i++) {\n      let valid = false;\n      let nextPoint = { x: 0, y: 0 };\n\n      while (!valid) {\n        // Get the next point.\n        nextPoint = {\n          x: Math.floor(a * t * Math.cos(t + dT)),\n          y: Math.floor(a * t * Math.sin(t + dT)),\n        };\n\n        // Check if the next point is adjacent to the previous point.\n        valid = isPointValid(nextPoint);\n      }\n\n      // Check if the previous point can be removed.\n      if (i > 1 && this.isNeighbor(points[i - 2], nextPoint)) {\n        delete points[i--];\n      }\n\n      // Check the radius.\n      const absX = Math.abs(nextPoint.x);\n      if (absX > radius) {\n        radius = absX;\n      }\n      const absY = Math.abs(nextPoint.y);\n      if (absY > radius) {\n        radius = absY;\n      }\n\n      // Store the next point, update the previous.\n      points[i] = nextPoint;\n      previousPoint = nextPoint;\n\n      // Increase t.\n      t += dT;\n    }\n\n    return ({\n      points: points.reverse(),\n      radius,\n    });\n  }\n\n  private isNeighbor(a: Point, b: Point): boolean {\n    return Math.abs(a.x - b.x) <= 1 && Math.abs(a.y - b.y) <= 1;\n  }\n\n  private readVinylTrack(vinyl: CanvasImage, trackStart: Point): Pixel[] {\n    const data: Pixel[] = [];\n\n    let prevPos = trackStart;\n    let pos: Point | null = trackStart;\n\n    while (pos) {\n      // Read the pixel data, push it.\n      let pixel = vinyl.getPixel(pos);\n      data.push(pixel);\n\n      // Get the next pixel position.\n      const nextPos = this.findNextPixel(vinyl, prevPos, pos);\n      prevPos = pos;\n      pos = nextPos;\n    }\n\n    return data;\n  }\n\n  private findNextPixel(vinyl: CanvasImage, previous: Point, current: Point): Point | null {\n    for (let dX = -1; dX <= 1; dX++) {\n      for (let dY = -1; dY <= 1; dY++) {\n        const nextPoint = ({\n          x: current.x + dX,\n          y: current.y + dY,\n        });\n\n        // Check if the point is the same as the previous or current point.\n        if (isSamePoint(nextPoint, previous) || isSamePoint(nextPoint, current)) {\n          continue;\n        }\n\n        // Check if the point is in bounds.\n        if (!vinyl.isInBounds(nextPoint)) {\n          continue;\n        }\n\n        // Get the pixel data, check if it is valid.\n        const data = vinyl.getPixel(nextPoint);\n        if (isDataPixel(data)) {\n          return nextPoint;\n        }\n      }\n    }\n\n    return null;\n  }\n}\n","import Pixel from '../../util/Pixel';\nimport SpiralBase from './SpiralBase';\n\nexport default class RainbowSpiral extends SpiralBase {\n  protected getPixels(data: Uint8Array): Pixel[] {\n    const pixels: Pixel[] = [];\n    for (let i = 0; i < data.length; i += 3) {\n      pixels.push({\n        red: data[i],\n        green: data[i + 1] || 0,\n        blue: data[i + 2] || 0,\n        alpha: 255,\n      });\n    }\n    return pixels;\n  }\n\n  protected getBytes(pixels: Pixel[]): Uint8Array {\n    const result = new Uint8Array(pixels.length * 3);\n    for (let i = 0; i < pixels.length; i++) {\n      const pixel = pixels[i];\n      result[i * 3] = pixel.red;\n      result[i * 3 + 1] = pixel.green;\n      result[i * 3 + 2] = pixel.blue;\n    }\n    return result;\n  }\n}\n","import Pixel, { grayPixel} from '../../util/Pixel';\nimport SpiralBase from './SpiralBase';\n\nexport default class GraySpiral extends SpiralBase {\n  protected getPixels(data: Uint8Array): Pixel[] {\n    const pixels: Pixel[] = [];\n    data.forEach(byte => pixels.push(grayPixel(byte)));\n    return pixels;\n  }\n\n  protected getBytes(pixels: Pixel[]): Uint8Array {\n    return new Uint8Array(pixels.map(p => p.red));\n  }\n}\n","import React, { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport CanvasImage from './vinyl/CanvasImage';\nimport Icon from './components/Icon';\nimport DataPreview from './components/DataPreview';\nimport { FileInfo } from './vinyl/FileInfo';\nimport { getDecoder } from './vinyl/encoders/encoders';\n\nconst ReadVinylPage: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [imageData, setImageData] = useState('');\n  const [image, setImage] = useState<HTMLImageElement>();\n  const [vinyl, setVinyl] = useState<CanvasImage>();\n\n  const [fileData, setFileData] = useState<FileInfo>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect((): void => {\n    // Load the image.\n    const loadImg = new Image();\n    loadImg.addEventListener('load', () => {\n      setImage(loadImg);\n    });\n    loadImg.src = imageData;\n  }, [imageData]);\n\n  useEffect((): void => {\n    // Get the canvas context.\n    const context = canvasRef.current?.getContext('2d');\n    if (!image || !context) {\n      return;\n    }\n\n    // Clear the canvas, draw the image onto it.\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    context.drawImage(image, 0, 0);\n\n    // Load the vinyl from the context.\n    setVinyl(new CanvasImage(context));\n  }, [image]);\n\n  const selectFile = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    // Check if a file is selected.\n    const file = e.currentTarget.files?.item(0);\n    if (!file) {\n      return;\n    }\n\n    // Clear the previous decoded data.\n    setFileData(undefined);\n\n    // Read the file into state.\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      if (typeof reader.result === 'string') {\n        setImageData(reader.result);\n      }\n    });\n    reader.readAsDataURL(file);\n  }, []);\n\n  const readVinyl = useCallback(async () => {\n    if (!vinyl) {\n      return;\n    }\n    setFileData(undefined);\n\n    const decoder = getDecoder(vinyl);\n    if (!decoder) {\n      return;\n    }\n\n    setLoading(true);\n    setFileData(await decoder.decode(vinyl));\n    setLoading(false);\n  }, [vinyl]);\n\n  return (\n    <main className='flex-center'>\n      <div className='controls wide'>\n        <input\n          type='file'\n          accept='image/*'\n          onChange={selectFile}\n          className='row'\n        />\n\n        <div className='center'>\n          <canvas ref={canvasRef} className='row' width={image?.width} height={image?.height} style={{\n            maxWidth: image?.width,\n            maxHeight: image?.height,\n          }} />\n        </div>\n\n        <button\n          className='big'\n          style={{\n            marginBottom: 12,\n          }}\n          onClick={readVinyl}\n          disabled={!vinyl}\n        >\n          Read <Icon icon='music' />\n        </button>\n        {loading &&\n        <div className='big'>\n            <Icon icon='spinner' className='fa-pulse' /> Loading...\n        </div>\n        }\n        <div className='center'>\n          {fileData && <DataPreview type={fileData.type} data={fileData.data} />}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default ReadVinylPage;\n","import React from 'react';\n\nconst GithubCorner: React.FC = () => (\n  <a className='github-corner' href='https://github.com/LucaScorpion/vixyl' target='_blank' rel=\"noopener noreferrer\">\n    <svg xmlns='http://www.w3.org/2000/svg' width={80} height={80} viewBox='0 0 250 250' fill='#EEE'>\n      <path d='M0 0l115 115h15l12 27 108 108V0z' fill='#222' />\n      <path className='octo-arm' d='M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16' />\n      <path className='octo-body' d='M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z' />\n    </svg>\n  </a>\n);\n\nexport default GithubCorner;\n","import React from 'react';\n\nexport interface Props {\n  href: string;\n}\n\nconst ExternalLink: React.FC<Props> = ({ href, children }) => (\n  <a href={href} target='_blank' rel=\"noopener noreferrer\">\n    {children}\n  </a>\n);\n\nexport default ExternalLink;\n","export default __webpack_public_path__ + \"static/media/tweet.816bc4c4.png\";","export default __webpack_public_path__ + \"static/media/tdfw_new.8c530ec7.png\";","import React from 'react';\nimport ExternalLink from './components/ExternalLink';\nimport tweet from './images/tweet.png';\nimport tdfw_new from './images/tdfw_new.png';\nimport { Link } from 'react-router-dom';\n\nconst AboutPage: React.FC = () => (\n  <main style={{ maxWidth: 900 }}>\n    <h3>Vixyl lets you read and create pixel art vinyls.</h3>\n\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <div>\n        <p>\n          This project started thanks to a <ExternalLink href='https://twitter.com/notch/status/490927655806853120'>tweet\n          by Notch</ExternalLink>.\n        </p>\n\n        <p>\n          Encoded in the spiral is an 8-bit mono 4kHz audio track, containing 3 seconds of the song \"Turn Down for\n          What\". When I initially saw this I hacked together a tool in C# with Windows Forms that would allow you to\n          read the image, and later I even added support for creating your own vinyls from a sound file.\n        </p>\n\n        <p>\n          Then, a few years later, I came across it again and figured it would be fun to completely redo the project\n          with some major improvements, primarily making it browser-based so anyone can easily use it.\n          A couple of coding sessions and a whole bunch of scope creep later, Vixyl was born!\n        </p>\n      </div>\n\n      <div style={{ marginLeft: 64 }}>\n        <img src={tweet} alt=\"Notch's tweet\" style={{ width: 260 }} />\n      </div>\n    </div>\n\n    <p>\n      Vixyl implements the idea of encoding binary data into an image in a more generic way. That means you can use it\n      to encode any file into a vinyl. That does mean that the original image doesn't work with Vixyl, but I did make an\n      updated version that does:\n    </p>\n\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <div style={{ marginRight: 64 }}>\n        <img src={tdfw_new} alt='Turn Down For What vinyl' />\n      </div>\n\n      <div>\n        <p>\n          Try it out for yourself! Go to <Link to='/read'>Read vinyl</Link> to try reading this image, or go\n          to <Link to='/create'>Create vinyl</Link> to create your own vinyl from a song, image, or any other file.\n        </p>\n      </div>\n    </div>\n\n    <h3>Source code, issues, or contributing?</h3>\n\n    <p>\n      This project is completely open source and\n      available <ExternalLink href='https://github.com/LucaScorpion/vixyl'>on\n      GitHub</ExternalLink>! If you encounter any bugs, have suggestions, or otherwise want to contribute, feel free\n      to check out the repo.\n    </p>\n  </main>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport { BooleanEncodeFormOption } from '../encoders/EncoderDecoder';\nimport { Props } from './FormOption';\n\nconst BooleanFormOption: React.FC<Props<boolean> & BooleanEncodeFormOption> = ({ value, onChange, text, defaultValue }) => (\n  <>\n    <input id={text} type='checkbox' checked={value} onChange={e => onChange(e.currentTarget.checked)} />\n    <label htmlFor={text}>{text}</label>\n  </>\n);\n\nexport default BooleanFormOption;\n","import React from 'react';\nimport { ColorEncodeFormOption } from '../encoders/EncoderDecoder';\nimport { ChromePicker, RGBColor } from 'react-color';\nimport { Props } from './FormOption';\n\nconst ColorFormOption: React.FC<Props<RGBColor> & ColorEncodeFormOption> = ({ value, onChange, text, defaultValue }) => (\n  <>\n    {text}\n    <ChromePicker color={value} onChange={e => onChange(e.rgb)} />\n  </>\n);\n\nexport default ColorFormOption;\n","import React from 'react';\nimport { EncodeFormOption } from '../encoders/EncoderDecoder';\nimport BooleanFormOption from './BooleanFormOption';\nimport ColorFormOption from './ColorFormOption';\n\nexport interface Props<T = any> {\n  value: T;\n  onChange: (val: T) => void;\n}\n\nconst FormOption: React.FC<Props & EncodeFormOption> = (props) => {\n  switch (props.type) {\n    case 'boolean':\n      return <BooleanFormOption {...props} />;\n    case 'color':\n      return <ColorFormOption {...props} />;\n  }\n};\n\nexport default FormOption;\n","import React, { CanvasHTMLAttributes, ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport Icon from './components/Icon';\nimport { FileInfo } from './vinyl/FileInfo';\nimport { drawPixel } from './util/draw';\nimport { Encoding, getEncoder } from './vinyl/encoders/encoders';\nimport EncoderDecoder, { EncodeFormOption } from './vinyl/encoders/EncoderDecoder';\nimport FormOption from './vinyl/form/FormOption';\n\nconst CreateVinylPage: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [fileInfo, setFileInfo] = useState<FileInfo>();\n  const [encoding, setEncoding] = useState(Encoding.RAINBOW_SPIRAL);\n  const [encoder, setEncoder] = useState<EncoderDecoder<unknown>>();\n  const [encoderOptions, setEncoderOptions] = useState<{ [key: string]: unknown }>();\n\n  const [canvasProps, setCanvasProps] = useState<CanvasHTMLAttributes<HTMLCanvasElement>>({\n    width: 0,\n    height: 0,\n  });\n  const [canvasPropsResolve, setCanvasPropsResolve] = useState<() => void>();\n  const [imgDataUrl, setImgDataUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Get the encoder.\n    const enc = getEncoder(encoding);\n    setEncoder(enc);\n\n    // Populate the encoder options with the default values, keeping matching values from the previous options.\n    const opts: { [key: string]: unknown } = {};\n    enc.getEncodeForm().forEach(opt => {\n      if (encoderOptions && encoderOptions[opt.key] != null) {\n        opts[opt.key] = encoderOptions[opt.key];\n      } else {\n        opts[opt.key] = opt.defaultValue;\n      }\n    });\n    setEncoderOptions(opts);\n\n    // We don't want to depend on encoderOptions, because that would turn into an infinite loop since we also update\n    // them here. We only use them to copy over current values when the encoder changes, so no need to depend on them.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [encoding]);\n\n  const selectFile = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    // Check if a file is selected.\n    const file = e.currentTarget.files?.item(0);\n    if (!file) {\n      return;\n    }\n\n    // Clear the old data.\n    setFileInfo(undefined);\n    setImgDataUrl('');\n    setCanvasProps({\n      width: 0,\n      height: 0,\n    });\n\n    // Read the file contents.\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      if (reader.result && typeof reader.result === 'object') {\n        // Store the file data in state.\n        setFileInfo({\n          type: file.type,\n          data: new Uint8Array(reader.result),\n        });\n      }\n    });\n    reader.readAsArrayBuffer(file);\n  }, []);\n\n  const createVinyl = useCallback(async (): Promise<void> => {\n    const context = canvasRef.current?.getContext('2d');\n    if (!fileInfo || !context || !encoder) {\n      return;\n    }\n\n    setLoading(true);\n    await encoder.encode(fileInfo, {\n      setCanvasProps: async (props): Promise<CanvasRenderingContext2D> => {\n        // Create a promise which resolves as soon as the canvas props propagate.\n        const canvasPropsPromise = new Promise(resolve => {\n          setCanvasPropsResolve(() => resolve);\n        });\n\n        // Set the canvas props, wait for the state change to propagate.\n        setCanvasProps(props);\n        await canvasPropsPromise;\n\n        return context;\n      },\n      form: encoderOptions,\n    });\n\n    // Set the top-left identifying pixels.\n    drawPixel(context, 0, 0, {\n      red: 86,    // V\n      green: 105, // i\n      blue: 120,  // x,\n      alpha: 255,\n    });\n    drawPixel(context, 1, 0, {\n      red: 121,   // y\n      green: 108, // l\n      blue: encoding,\n      alpha: 255,\n    });\n\n    setImgDataUrl(context.canvas.toDataURL());\n    setLoading(false);\n  }, [fileInfo, encoding, encoder, encoderOptions]);\n\n  useEffect(() => {\n    // Resolve the canvas props propagation promise.\n    if (canvasPropsResolve) {\n      canvasPropsResolve();\n    }\n\n    // We don't want to depend on canvasPropsResolve, because we just want to resolve whenever the props change.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [canvasProps]);\n\n  return (\n    <main className='flex-center'>\n      <div className='controls'>\n        <input type='file' className='row' onChange={selectFile} />\n\n        <select className='row' onChange={e => setEncoding(parseInt(e.currentTarget.value, 10))} value={encoding}>\n          <option value={Encoding.GRAY_SPIRAL}>Gray Spiral</option>\n          <option value={Encoding.RAINBOW_SPIRAL}>Rainbow Spiral</option>\n        </select>\n        {encoderOptions && encoder && encoder.getEncodeForm().map((option: EncodeFormOption) => (\n          <div key={option.key} className='row'>\n            <FormOption\n              {...option}\n              value={encoderOptions[option.key]}\n              onChange={val => setEncoderOptions(prevState => ({ ...prevState, [option.key]: val }))}\n            />\n          </div>\n        ))}\n\n        <button className='big' onClick={createVinyl} disabled={!fileInfo}>\n          Create <Icon icon='compact-disc' />\n        </button>\n        {imgDataUrl &&\n        <a download='vinyl.png' href={imgDataUrl}>\n            <button className='big'>\n                Save <Icon icon='image' />\n            </button>\n        </a>\n        }\n        {loading &&\n        <div className='big'>\n            <Icon icon='spinner' className='fa-pulse' /> Loading...\n        </div>\n        }\n      </div>\n      <div>\n        <canvas {...canvasProps} ref={canvasRef} />\n      </div>\n    </main>\n  );\n};\n\nexport default CreateVinylPage;\n","import React from 'react';\nimport ReadVinylPage from './ReadVinylPage';\nimport GithubCorner from './components/GithubCorner';\nimport { Link, NavLink, Redirect, Route, Switch } from 'react-router-dom';\nimport AboutPage from './AboutPage';\nimport CreateVinylPage from './CreateVinylPage';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <header>\n        <Link to='/'>\n          <h1>Vixyl</h1>\n        </Link>\n        <nav>\n          <NavLink exact to='/'>About</NavLink>\n          <NavLink exact to='/read'>Read vinyl</NavLink>\n          <NavLink exact to='/create'>Create vinyl</NavLink>\n        </nav>\n      </header>\n      <GithubCorner />\n      <div className='content'>\n        <Switch>\n          <Route exact path='/' component={AboutPage} />\n          <Route exact path='/read' component={ReadVinylPage} />\n          <Route exact path='/create' component={CreateVinylPage} />\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}